@using System.Web.UI.WebControls
@using MyThings.Common.Models
@using Newtonsoft.Json
@model MyThings.Web.ViewModels.SensorManagementViewModel

@{
    ViewBag.Title = "Manage";
    ViewBag.PageId = "list";
}

<ul>
    <li class="breadcrumbs">@Html.ActionLink("Home", "Index", "Dashboard") > @Html.ActionLink("Sensor management", "Sensormanagement", "Dashboard")</li>
</ul>

<ul class="sensorul">
    <li class="editgroup">
        <h2>Groups</h2>
    </li>
    <li class="editgroup">
        <div type="button" class="editbutton">Edit</div>
    </li>
</ul>

<div class="groupdiv">
</div>

<hr class="purpleHr dialogrule  unblur" />

<ul class="sensorul unblur">
    <li class="editgroup">
        <h2>Sensors</h2>
    </li>
</ul>

@using (Html.BeginForm("Sensormanagement", "Dashboard", FormMethod.Get, new { @class = "searchsensorform unblur" }))
{
            <div class="searchdiv unblur">
                <input class="searchbardiv ui-autocomplete-input" autocomplete="off" maxlength="127" />
                    <input class="inputimg" type="image" src="http://loradatagroep9.blob.core.windows.net/proximusimages/search-icon.svg" />
            </div>
}


<select class="dropdownsort  unblur">
</select>

<table class="table sensorlist">
    <thead>
    <tr class="sensorsheadrow">
        <th>ID</th>
        <th>Name</th>
        <th>#Containers</th>
        <th>Location</th>
        <th></th>
    </tr>
        </thead>
</table>
    <br />

    @section scripts{
        <script type="text/javascript">
            $(window)
                .load(function() {
                    //integer
                    var allSensorsCount = @Html.Raw(Model.TotalSensors);

                    //Manier 1 - Met JSON Objecten
                    var allSensors = @Html.Raw(JsonConvert.SerializeObject(Model.Sensors));
                    var comboboxContainerTypes = @Html.Raw(JsonConvert.SerializeObject(Model.ContainerTypes));
                    var pinnedSensors = @Html.Raw(JsonConvert.SerializeObject(Model.PinnedSensors));
                    var groups = @Html.Raw(JsonConvert.SerializeObject(Model.Groups));
                    var autocompleteFeed = @Html.Raw(JsonConvert.SerializeObject(Model.AutoCompleteSuggestionList));

                    allSensors = allSensors || [];
                    comboboxContainerTypes = comboboxContainerTypes || [];
                    pinnedSensors = pinnedSensors || [];
                    groups = groups || [];
                    autocompleteFeed = autocompleteFeed || [];

                    //console.log(allSensors);
                    //console.log(comboboxContainerTypes);
                    //console.log(pinnedSensors);
                    //console.log(groups);
                    //console.log(autocompleteFeed);
                    //console.log(allSensorsCount);

                    //global variables
                    var sensors = [];
                    var group;
                    var apiBaseUrl = "/";
                    var webApiBaseUrl = "http://mythingsapi.azurewebsites.net/api/";
                    var groupviewbag = '@ViewBag.SelectedGroup';
                    var sensorviewbag = '@ViewBag.SelectedSensor';
                    var queryviewbag = '@ViewBag.Query';
                    var containercurvalue;


                    //function to dynamically create the groups on the page
                    function grouplistCreate() {
                        for (var i = 0; i < groups.length && i < 10; i++) {
                            if (groups[i].Sensors == null) {
                                $(".groupdiv")
                                    .append('<div class="grouprectangletile oldgroups"  id="group' +
                                        groups[i].Id +
                                        '">' +
                                        '<div class="textdivgroup">' +
                                        groups[i].Name +
                                        '</div>' +
                                        '<div class="ciphervaluegroup">' +
                                        0 +
                                        '</div>' +
                                        '<div class="sensors">' +
                                        'sensors' +
                                        '</div>' +
                                        '</div>');
                            } else {
                                $(".groupdiv")
                                    .append('<div class="grouprectangletile oldgroups"  id="group' +
                                        groups[i].Id +
                                        '">' +
                                        '<div class="textdivgroup itemName" title="' +
                                        groups[i].Name+'">' +
                                        groups[i].Name +
                                        '</div>' +
                                        '<div class="ciphervaluegroup">' +
                                        groups[i].Sensors.length +
                                        '</div>' +
                                        '<div class="sensors">' +
                                        'sensors' +
                                        '</div>' +
                                        '</div>');
                            }
                        }
                        $(".groupdiv")
                            .append('<div class="grouprectangletile addgrouptile">' +
                                '<a>' +
                                '<div class="addgroup" id="addgroup">' +
                                '+' +
                                '</div>' +
                                '</a>' +
                                '</div>');
                    }

                    //Here we generate a place for the user to make a new group
                    $('.groupdiv').on('click','.addgrouptile',function() {
                        if ($('.blur').length) {}else{
                            $('.linkgroupdetail').remove();
                            $('.virtualgrouplink').remove();
                            $('.sensordetails').remove();
                        if ($('.newgroup').length) {
                            $('.newgroup').remove();
                            $('.groupsensorrow').removeClass('groupsensorrow');
                            sensors = [];
                            $('.addgroup').text("+");
                        } else {

                            $('.addgrouptile').remove();
                            $('.sensorrows').remove();
                            sensorlistCreate();
                            $(".groupdiv")
                                .append('<div class="grouprectangletile newgroup">' +
                                    '<div class="groupinputlabel">Choose a name for the group</div>' +
                                    '<input class="groupinputtext" type="text" maxlength="50" />' +
                                    '<select class="selectpin" class="pinchoice">' +
                                    '<option name="nopinvalue" value="false">Do not pin</option><option name="pinvalue" value="true">Pin</option>' +
                                    '</select>'+
                                    '<div class="newgroupbuttontext">Click on the sensors below to put in the group</div>' +
                                    '<div type="button" class="newgroupbutton">Confirm group</div>' +
                                    '</div>');

                            $(".groupdiv")
                                .append('<div class="grouprectangletile addgrouptile">' +
                               '<a>' +
                               '<div class="addgroup" id="addgroup">' +
                               '-' +
                               '</div>' +
                               '</a>' +
                               '</div>');
                        }
                        }
                    });

                    //Get into edit mode with groups
                    $('.sensorul').on('click','.editbutton', function() {
                        $('.sensorrows').remove();
                        $('.linkgroupdetail').remove();
                        $('.virtualgrouplink').remove();
                        $('.sensordetails').remove();
                        if (('.newgroup').length) {
                            $('.newgroup').remove();
                            $('.addgroup').text("+");
                        }
                        sensorlistCreate();
                        $('.sensorlist').css("z-index", "901");
                        $('.unblur').toggleClass('blur');
                        $('.blur').removeClass('.unblur');
                        if($('.unblur').length)
                            $('.editgroupfield').remove();
                    });


                    //use edit mode to edit groups
                    $('.groupdiv').on('click','.oldgroups', function(e) {
                        group = $(e.target).parent().attr('id');
                        if(group!=undefined)
                            var groupId =  parseInt(group.substr(5));
                         sensorIds = [];
                        if ($('.blur').length) {
                            if (!$('.editgroupfield').length) {
                                for (var i = 0; i < groups.length; i++) {
                                    if (groups[i].Id == groupId) {
                                        var groupcontainer = groups[i].Sensors;

                                        $('<div class="grouprectangletile editgroupfield">' +
                                                '<div class="groupeditinputlabel">Edit ' +
                                                groups[i].Name +
                                                '</div>' +
                                                '<select class="selecteditpin" class="pinchoice">' +
                                                '<option name="nopinvalue" value="false">Do not pin</option>' +
                                                '<option name="pinvalue" value="true">Pin</option>' +
                                                '</select>' +
                                                '<div class="editgroupbuttontext">Click the sensors below to change your group</div>' +
                                                '<div type="button" class="editgroupbutton">Confirm group</div>' +
                                                '</div>')
                                            .insertAfter($('.groupdiv'));
                                        for (var j = 0; j < groupcontainer.length; j++) {
                                            var groupsensorid = "sensor"+groupcontainer[j].Id;
                                            $('#' + groupsensorid).addClass('groupsensorrow');
                                        }

                                    }
                                }
                            } else {
                                ($('.editgroupfield').remove());
                                $('.groupsensorrow').removeClass('groupsensorrow');
                            }
                        } else {

                            ($('.sensorrows').remove());
                            ($('.sensordetails').remove());
                            ($('.virtualgrouplink').remove());
                            ($('.linkgroupdetail').remove());
                           for (var j = 0; j < groups.length; j++) {
                               if (groups[j].Id == groupId) {
                                   $('<img class="pincaseimg linkgroupdetail" src="https://loradatagroep9.blob.core.windows.net/proximusimages/arrow-down-icon-purple.svg" />'+
                                       '<a class="virtualgrouplink" href=/sensor/' +
                                           groups[j].VirtualSensorIdentifier +
                                           '>Details for ' +  groups[j].Name+
                                           '</a>')
                                       .insertBefore('.groupdiv');
                                    var sensorGroups = groups[j].Sensors;
                                    for (var l = 0; l < sensorGroups.length; l++) {
                                        sensorIds.push(sensorGroups[l]);

                                    }
                                }
                            }
                            groupSort(sensorIds);

                        }
                    });


                    //click on an item in the sensorlist
                    $('.sensorlist').on('click','.sensorrows', function(e) {
                        var sensor = $(e.target).parent().attr('id');
                        sensor = sensor.substr(6);
                        var sensorvalues = [];
                        if (sensor != null) {
                            if ($('.newgroup').length) {
                                if (!$(e.target).parent('.groupsensorrow').length) {
                                    $(e.target).parent().addClass('groupsensorrow');
                                    sensors.push(sensor);
                                    $('<div id="dialogdiv" class="ui-front" title="Sensor added">Added the sensor to your group</div>')
                                        .insertBefore($('.dialogrule'))
                                        .dialog({ autoOpen: false });
                                    $('#dialogdiv').dialog("open");
                                    setTimeout(function() { $('#dialogdiv').dialog("close"); },
                                        1000);
                                } else {
                                    var index=sensors.indexOf(sensor);
                                    if (index > -1) {
                                        sensors.splice(index, 1);
                                    }
                                    $(e.target).parent().removeClass('groupsensorrow');
                                    $('<div id="dialogdivremove" class="ui-front" title="Sensor removed">Removed the sensor from the group</div>')
                                        .insertBefore($('.dialogrule'))
                                        .dialog({ autoOpen: false });
                                    $('#dialogdivremove').dialog("open");
                                    setTimeout(function() { $('#dialogdivremove').dialog("close"); },
                                        1000);
                                }
                            } else {

                                if ($('.editgroupfield').length) {
                                    if(group!=undefined)
                                        var groupId =  parseInt(group.substr(5));
                                    if ($(e.target).parent('.groupsensorrow').length) {
                                        var removesensor ={"groupId":groupId,"sensorId": parseInt($(e.target).parent().attr('id').substr(6))}
                                        $(e.target).parent().removeClass('groupsensorrow');
                                        $.ajax({
                                            url: apiBaseUrl + "Dashboard/RemoveSensor",
                                            data: JSON.stringify(removesensor),
                                            method: "POST",
                                            contentType: "application/json"
                                        }).done(function (json) {
                                        }).statusCode(function (statuscoderesponse) {
                                            if (statuscoderesponse != null) {
                                                console.log(statuscoderesponse.statusMessage);
                                                console.log('status');
                                            }
                                        });

                                        $('<div id="dialogdivremove" class="ui-front" title="Sensor removed">Removed the sensor from the group</div>')
                                       .insertBefore($('.dialogrule'))
                                       .dialog({ autoOpen: false });
                                        $('#dialogdivremove').css("z-index", "9002");
                                        $('.editgroupfield').css("z-index", "1");
                                        $('#dialogdivremove').dialog("open");
                                        setTimeout(function() { $('#dialogdivremove').dialog("close");
                                            $('.editgroupfield').css("z-index", "9001");},
                                            1000);

                                    } else {
                                        var addsensor ={"groupId":groupId,"sensorId": parseInt($(e.target).parent().attr('id').substr(6))}

                                        $(e.target).parent().addClass('groupsensorrow');
                                        $.ajax({
                                            url: apiBaseUrl + "Dashboard/AddSensor",
                                            data: JSON.stringify(addsensor),
                                            method: "POST",
                                            contentType: "application/json"
                                        }).done(function (json) {
                                        }).statusCode(function (statuscoderesponse) {
                                            if (statuscoderesponse != null) {
                                                console.log(statuscoderesponse.statusMessage);
                                                console.log('status');
                                            }
                                        });

                                        $('<div id="dialogdiv" class="ui-front" title="Sensor added">Added the sensor to your group</div>')
                                       .insertBefore($('.dialogrule'))
                                       .dialog({ autoOpen: false });
                                        $('#dialogdivremove').css("z-index", "9002");
                                        $('.editgroupfield').css("z-index", "1");
                                        $('#dialogdiv').dialog("open");
                                        setTimeout(function() {
                                                $('#dialogdiv').dialog("close");
                                                $('.editgroupfield').css("z-index", "9001");
                                            },
                                            1000);

                                    }
                                }else{

                                //get details from sensors
                                    // webApiBaseUrl
                                    if ($('.groupsensorrow').hasClass('groupsensorrow')) {
                                        if(!$(e.target).parent().hasClass('groupsensorrow'))
                                            $('.sensordetails').remove();
                                    }
                                    showsensorDetail(sensor,e);
                                }

                            }
                        }
                    });

                    //show the detail (containers in a div) for a sensor
                    function showsensorDetail(sensor,e){

                        for (var i = 0; i < allSensors.length; i++) {
                            if (sensor == allSensors[i].Id) {
                                var sensorcontainer = allSensors[i].Containers;

                                if (!$('.sensordetails').length) {
                                    if (!$(e.target).parent().hasClass('groupsensorrow')) {
                                        $('.groupsensorrow').removeClass('groupsensorrow');
                                        $('#sensor' + sensor).addClass('groupsensorrow');
                                    } else {
                                        $('.groupsensorrow').removeClass('groupsensorrow');
                                    }
                                    var sensorId = allSensors[i].Id;
                                    $('<div class="sensordetails">' +
                                        '<div class="sensordetailsdiv">' +
                                             '<h2 class="sensordetailcontainer">Containers' +
                                              '</h2>' +
                                              '<div class="sensordetaillinkdiv">'+
                                            '<img class="arrowlinkimg linkicondetail" src="https://loradatagroep9.blob.core.windows.net/proximusimages/arrow-icon-white.png" />'+
                                               '<a href="/sensor/'+allSensors[i].Id+'" class="sensordetaillink">Go to the sensor</a>' +
                                               '</div>'+
                                            '</div>'+
                                            '</div>')
                                        .insertAfter($('.sensorlist'));
                                    for (var j = 0; j < sensorcontainer.length; j++) {
                                        getRecentData(sensorcontainer[j].Id);
                                        switch (sensorcontainer[j].ContainerType.Name) {
                                            case "Battery level":
                                                $('<div class="sensordetailcontainers">' +
                                        '<a href="/container/'+sensorcontainer[j].Id+'" class="containerdetaillink">'+containercurvalue+
                    "<sup>%</sup></p>" +'</a>'+
                                            '<img class="pincaseimg" alt="Battery" src="http://loradatagroep9.blob.core.windows.net/proximusimages/battery-icon-white.png" /> ' +
                                        '</div>')
                                    .insertAfter($('.sensordetailcontainer'));
                                                break;
                                            case "Temperature":
                                                $('<div class="sensordetailcontainers">' +
                                        '<a href="/container/'+sensorcontainer[j].Id+'" class="containerdetaillink">'+containercurvalue+
                    "<sup>°C</sup></p>" +'</a>'+
                                                    "<img class='pincaseimg' alt='Temperature' src='http://loradatagroep9.blob.core.windows.net/proximusimages/temperature-icon-white.png' /> "+ 
                                                                               '</div>')
                                                                            .insertAfter($('.sensordetailcontainer'));
                                                break;
                                            case "Humidity":
                                                $('<div class="sensordetailcontainers">' +
                                        '<a href="/container/'+sensorcontainer[j].Id+'" class="containerdetaillink">'+containercurvalue+
                    "<sup>%</sup></p>" +'</a>'+
                                                    "<img class='pincaseimg' alt='Humidity' src='http://loradatagroep9.blob.core.windows.net/proximusimages/humidity-icon-white.png' /> "+
                                                                                '</div>')
                                                                            .insertAfter($('.sensordetailcontainer'));
                                                break;
                                            case "GPS":
                                                $('<div class="sensordetailcontainers">' +
                                        '<a href="/container/'+sensorcontainer[j].Id+'" class="containerdetaillink">'+containercurvalue+'</a>'+
                                                            "<img class='pincaseimg' alt='Location' src='http://loradatagroep9.blob.core.windows.net/proximusimages/location-icon-white.png' /> "+
                                                                                '</div>')
                                                                            .insertAfter($('.sensordetailcontainer'));
                                                break;
                                            case "OnOff":
                                            case "Button1":
                                            case "Push Button":
                                                $('<div class="sensordetailcontainers">' +
                                        '<a href="/container/'+sensorcontainer[j].Id+'" class="containerdetaillink">'+containercurvalue+'</a>'+
                                                    "<img class='pincaseimg' alt='Toggle' src='http://loradatagroep9.blob.core.windows.net/proximusimages/toggle-icon-white.png' /> "+
                                                                                '</div>')
                                                                            .insertAfter($('.sensordetailcontainer'));
                                                break;
                                            case "Luminance":
                                                $('<div class="sensordetailcontainers">' +
                                        '<a href="/container/'+sensorcontainer[j].Id+'" class="containerdetaillink">'+containercurvalue+'</a>'+
                                                    "<img class='pincaseimg' alt='Luminance' src='http://loradatagroep9.blob.core.windows.net/proximusimages/luminance-icon-white.png' /> "+
                                                                                '</div>')
                                                                            .insertAfter($('.sensordetailcontainer'));
                                                break;
                                            case "PIR":
                                                $('<div class="sensordetailcontainers">' +
                                        '<a href="/container/'+sensorcontainer[j].Id+'" class="containerdetaillink">'+containercurvalue+'</a>'+
                                                    "<img class='pincaseimg' alt='PIR' src='http://loradatagroep9.blob.core.windows.net/proximusimages/eye-icon-white.png' /> "+
                                                                                '</div>')
                                                                            .insertAfter($('.sensordetailcontainer'));
                                                break;
                                            case "Accelerometer":
                                                $('<div class="sensordetailcontainers">'+
                                        '<a href="/container/'+sensorcontainer[j].Id+'" class="containerdetaillink">'+containercurvalue+'</a>' +
                                                "<img class='pincaseimg' alt='Accelerometer' src='http://loradatagroep9.blob.core.windows.net/proximusimages/accelerometer-icon-white.png' /> "+
                                                                                '</div>')
                                                                            .insertAfter($('.sensordetailcontainer'));
                                                break;
                                            case "Simple Metering Current":
                                            case "Simple Metering Demand":
                                                $('<div class="sensordetailcontainers">' +
                                        '<a href="/container/'+sensorcontainer[j].Id+'" class="containerdetaillink">'+containercurvalue+'</a>'+
                                                "<img class='pincaseimg' alt='Simple Metering' src='http://loradatagroep9.blob.core.windows.net/proximusimages/power-icon-white.png' /> "+
                                                                                '</div>')
                                                                            .insertAfter($('.sensordetailcontainer'));
                                                break;
                                            default:
                                            case "Raw payload":
                                            case "Counter":
                                                $('<div class="sensordetailcontainers">' +
                                        '<a href="/container/'+sensorcontainer[j].Id+'" class="containerdetaillink">'+containercurvalue+'</a>'+
                                                "<img class='pincaseimg' alt='Generic' src='http://loradatagroep9.blob.core.windows.net/proximusimages/proximus-x-white.png' /> "+
                                                                                '</div>')
                                                                            .insertAfter($('.sensordetailcontainer'));
                                                break;
                                        }
                                    }
                                } else {
                                    ($('.sensordetails').remove());
                                    ($('.sensordetailcontainers').remove());
                                    $('#sensor' + sensor).removeClass('groupsensorrow');
                                }

                            }
                        }
                    }


                    //Click on the button to create a new group
                    $('.groupdiv').on( 'click','.newgroupbutton',function() {
                            var name = $('.groupinputtext').val();
                            var pinnedgroups = $('.selectpin').val();
                            if (pinnedgroups == "true")  pinnedgroups=true;
                            if (pinnedgroups == "false") pinnedgroups=false;
                            if (name == "" || sensors.length==0) {
                                $('<div id="dialogdivgroup" class="ui-front" title="Wrong group">Please submit a title for the group and at least one sensor.</div>')
                                        .insertBefore($('.dialogrule'))
                                        .dialog({ autoOpen: false });
                                $('#dialogdivgroup').dialog("open");
                                setTimeout(function() { $('#dialogdivgroup').dialog("close"); },
                                    5000);
                            }else{
                            var groupArr =
                                    {
                                        "name": name,
                                        "sensors": sensors,
                                        "autoPinGroup": pinnedgroups
                                    };


                            //json call to url
                            $.ajax({
                                url: apiBaseUrl + "Dashboard/CreateGroup",
                                data: JSON.stringify(groupArr),
                                method: "POST",
                                contentType: "application/json"
                            }).done(function (json) {
                                location.reload();
                            }).statusCode(function (statuscoderesponse) {
                                if (statuscoderesponse != null) {
                                    console.log(statuscoderesponse.statusMessage);
                                    console.log('status');
                                }
                            });
                            $('.newgroup').remove();
                            $('.addgroup').text("+");
                            sensors.length=0;
                            groupArr.length=0;
                            $('<div id="dialogdivgroupmake" class="ui-front" title="Making group">Please wait while we create your group.</div>')
                                .insertBefore($('.dialogrule'))
                                .dialog({ autoOpen: false });
                            $('#dialogdivgroupmake').dialog("open");
                            setTimeout(function() { $('#dialogdivgroupmake').dialog("close"); },
                                4000);
                            }
                        });

                    //Click on the button to edit a group
                    $('.container').on( 'click','.editgroupbutton',function() {
                            var urlpingroup = "";
                            var pinnedgroups = $('.selecteditpin').val();
                            if (pinnedgroups == "true")  urlpingroup = "PinGroup";
                            else if (pinnedgroups == "false")  urlpingroup = "UnpinGroup";

                            var groupId = parseInt(group.substr(5));
                            groupId = {"groupId":groupId}
                                 $.ajax({
                                     url: apiBaseUrl + "Dashboard/"+urlpingroup,
                                data: JSON.stringify(groupId),
                                method: "POST",
                                contentType: "application/json"
                                 }).done(function(json) {
                                     location.reload();
                            })
                           .fail(function(json) { console.log('sensor failed'); })
                           .statusCode(function(statuscoderesponse) {
                               if (statuscoderesponse != null) {
                                   console.log(statuscoderesponse.statusMessage);
                                   console.log('status');
                               }
                           });


                        });


                    //Click on the pinimage to unpin a sensor
                    $('.sensorlist').on('click','.sensorpinimg', function(e) {
                        ($('.sensordetails').remove());
                        ($('.sensordetailcontainers').remove());
                        var sensorId = parseInt($(e.target).parent().attr('id'));
                        var pinSensor = { "sensorId": sensorId };
                        $.ajax({
                            url: apiBaseUrl + "Dashboard/UnpinSensor",
                            data: JSON.stringify(pinSensor),
                            method: "POST",
                            contentType: "application/json"
                        }).done(function(json) {
                            console.log( $(e.target));
                            $(e.target).removeClass('sensorpinimg').addClass('sensornotpinimg');
                            })
                            .fail(function(json) { console.log('sensor failed'); })
                            .statusCode(function(statuscoderesponse) {
                                if (statuscoderesponse != null) {
                                    console.log(statuscoderesponse.statusMessage);
                                    console.log('status');
                                }
                            });
                    });

                    //Click on the pinimage to pin a sensor
                    $('.sensorlist').on('click','.sensornotpinimg', function(e) {
                                ($('.sensordetails').remove());
                                ($('.sensordetailcontainers').remove());
                                var sensorId = parseInt($(e.target).parent().attr('id'));
                                var pinSensor = { "sensorId": sensorId };
                                $.ajax({
                                    url: apiBaseUrl + "Dashboard/PinSensor",
                                    data: JSON.stringify(pinSensor),
                                    method: "POST",
                                    contentType: "application/json"
                                })
                                .done(function(json) {
                                    $(e.target).removeClass('sensornotpinimg').addClass('sensorpinimg');
                                })
                                .fail(function(json) { console.log('sensor failed'); })
                                .statusCode(function(statuscoderesponse) {
                                    if (statuscoderesponse != null) {
                                        console.log(statuscoderesponse.statusMessage);
                                        console.log('status');
                                    }
                                });
                            });

                    //autocomplete searchbox
                    function searchauto() {
                        var arr = [];
                        for (var i = 0; i < autocompleteFeed.length; i++) {
                            arr.push(autocompleteFeed[i]);
                        }
                        $(".searchbardiv")
                            .autocomplete({
                                source: arr
                            });

                    }

                    //dropdown with ways to sort the sensorlist
                    function fillSortingbox() {
                        $(".dropdownsort").append('<option value="">Pick a sorting method</option>');
                        for (var i = 0; i < comboboxContainerTypes.length; i++) {
                            $(".dropdownsort")
                                .append('<option value="' +
                                    comboboxContainerTypes[i].Id +
                                    '">' +
                                    comboboxContainerTypes[i].Name +
                                    '</option>');
                        }
                    }

                    //make sensorlist on startup
                    function sensorlistCreate() {
                        var allSensorIds = [];
                        var pinnedSensorIds = [];
                        for (var i = 0; i < allSensors.length; i++) {
                            allSensorIds.push(allSensors[i].Id);
                        }
                        for (var j = 0; j < pinnedSensors.length; j++) {
                            pinnedSensorIds.push(pinnedSensors[j].Id);
                        }
                        allSensorIds = allSensorIds.reduce(function(prev, value) {
                            var isDuplicate = false;
                            for (var l = 0; l < pinnedSensorIds.length; l++) {
                                if (value == pinnedSensorIds[l]) {
                                    isDuplicate = true;
                                    break;
                                }
                            }
                            if (!isDuplicate) {
                                prev.push(value);
                            }
                            return prev;
                        },[]);

                        for (var n = 0; n < allSensors.length; n++) {
                            if (isInArray(allSensors[n].Id, allSensorIds)) {
                                $(".sensorlist")
                                    .append('<tr class="sensorrows" id="sensor' +
                                        allSensors[n].Id +
                                        '">' +
                                        '<td class="idsensordiv">' +
                                        allSensors[n].MACAddress +
                                        '</td>' +
                                        '<td class="namesensordiv">' +
                                        allSensors[n].Name +
                                        '</td>' +
                                        '<td class="numbercontainerdiv">' +
                                        allSensors[n].Containers.length +
                                        '</td>' +
                                        '<td class="sensorlocationdiv">' +
                                        allSensors[n].Location +
                                        '</td>' +
                                        '<td class="sensorpinimgtd"  id="' +
                                        allSensors[n].Id +
                                        '">' +
                                        '<img class="sensornotpinimg" alt="pin icon" src="http://loradatagroep9.blob.core.windows.net/proximusimages/pin-black-icon.svg" />' +
                                        '</td>' +
                                        '</tr>');
                            } else {
                                $(".sensorlist")
                 .append('<tr class="sensorrows" id="sensor'+
                     allSensors[n].Id+'">' +
                     '<td class="idsensordiv">' +
                     allSensors[n].MACAddress +
                     '</td>' +
                     '<td class="namesensordiv">' +
                     allSensors[n].Name +
                     '</td>' +
                     '<td class="numbercontainerdiv">' +
                     allSensors[n].Containers.length +
                     '</td>' +
                     '<td class="sensorlocationdiv">' +
                     allSensors[n].Location +
                     '</td>' +
                     '<td class="sensorpinimgtd"  id="'+
                     allSensors[n].Id+'">' +
                     '<img class="sensorpinimg" alt="pin icon" src="http://loradatagroep9.blob.core.windows.net/proximusimages/pin-black-icon.svg" />' +
                     '</td>' +
                     '</tr>');
                            }
                        }

                    }

                    //sort sensorlist on userinput
                    function sensorlistPinSort(smallGroup, bigGroup) {
                        var allSensorIds = [];
                        var pinnedSensorIds = [];
                        for (var i = 0; i < bigGroup.length; i++) {
                            allSensorIds.push(bigGroup[i].Id);}
                        for (var j = 0; j < smallGroup.length; j++) {
                            pinnedSensorIds.push(smallGroup[j].Id);
                        }
                        allSensorIds = allSensorIds.reduce(function(prev, value) {
                            var isDuplicate = false;
                            for (var l = 0; l < pinnedSensorIds.length; l++) {
                                if (value == pinnedSensorIds[l]) {
                                    isDuplicate = true;
                                    break;
                                }
                            }
                            if (!isDuplicate) {
                                prev.push(value);
                            }
                            return prev;
                        },[]);

                        sortPinnedUnpinned(allSensorIds);
                    }

                    //subfunction to sort the list in pinned and unpinned sensors
                    function sortPinnedUnpinned(sensors){
                        for (var m = 0; m < allSensors.length; m++) {
                            if (!isInArray(allSensors[m].Id,sensors)){
                                $(".sensorlist")
                        .append('<tr class="sensorrows" id="sensor'+
                            allSensors[m].Id+'">' +
                            '<td class="idsensordiv">' +
                            allSensors[m].MACAddress +
                            '</td>' +
                            '<td class="namesensordiv">' +
                            allSensors[m].Name +
                            '</td>' +
                            '<td class="numbercontainerdiv">' +
                            allSensors[m].Containers.length +
                            '</td>' +
                            '<td class="sensorlocationdiv">' +
                            allSensors[m].Location +
                            '</td>' +
                            '<td class="sensorpinimgtd"  id="'+
                            allSensors[m].Id+'">' +
                            '<img class="sensorpinimg" alt="pin icon" src="http://loradatagroep9.blob.core.windows.net/proximusimages/pin-black-icon.svg" />' +
                            '</td>' +
                            '</tr>');
                            }
                        }

                        for (var n = 0; n < allSensors.length; n++) {
                            if (isInArray(allSensors[n].Id,sensors)) {
                                $(".sensorlist")
                                          .append('<tr class="sensorrows" id="sensor'+
                                              allSensors[n].Id+'">' +
                                              '<td class="idsensordiv">' +
                                              allSensors[n].MACAddress +
                                              '</td>' +
                                              '<td class="namesensordiv">' +
                                              allSensors[n].Name +
                                              '</td>' +
                                              '<td class="numbercontainerdiv">' +
                                              allSensors[n].Containers.length +
                                              '</td>' +
                                              '<td class="sensorlocationdiv">' +
                                              allSensors[n].Location +
                                              '</td>' +
                                              '<td class="sensorpinimgtd"  id="'+
                                              allSensors[n].Id+'">' +
                                              '<img class="sensornotpinimg" alt="pin icon" src="http://loradatagroep9.blob.core.windows.net/proximusimages/pin-black-icon.svg" />' +
                                              '</td>' +
                                              '</tr>');
                            }
                        }
                    }

                    //subfunction to sort the list in pinned and unpinned sensors
                    function sortOnePinnedUnpinned(sensor) {
                        for (var m = 0; m < pinnedSensors.length; m++) {
                        if (allSensors[m].Id == sensor) {
                                $(".sensorlist")
                                    .append('<tr class="sensorrows" id="sensor' +
                                        allSensors[m].Id +
                                        '">' +
                                        '<td class="idsensordiv">' +
                                        allSensors[m].MACAddress +
                                        '</td>' +
                                        '<td class="namesensordiv">' +
                                        allSensors[m].Name +
                                        '</td>' +
                                        '<td class="numbercontainerdiv">' +
                                        allSensors[m].Containers.length +
                                        '</td>' +
                                        '<td class="sensorlocationdiv">' +
                                        allSensors[m].Location +
                                        '</td>' +
                                        '<td class="sensorpinimgtd"  id="' +
                                        allSensors[m].Id +
                                        '">' +
                                        '<img class="sensorpinimg" alt="pin icon" src="http://loradatagroep9.blob.core.windows.net/proximusimages/pin-black-icon.svg" />' +
                                        '</td>' +
                                        '</tr>');
                            } else {
                                $(".sensorlist")
                                        .append('<tr class="sensorrows" id="sensor'+
                                            allSensors[m].Id+'">' +
                                            '<td class="idsensordiv">' +
                                            allSensors[m].MACAddress +
                                            '</td>' +
                                            '<td class="namesensordiv">' +
                                            allSensors[m].Name +
                                            '</td>' +
                                            '<td class="numbercontainerdiv">' +
                                            allSensors[m].Containers.length +
                                            '</td>' +
                                            '<td class="sensorlocationdiv">' +
                                            allSensors[m].Location +
                                            '</td>' +
                                            '<td class="sensorpinimgtd"  id="'+
                                            allSensors[m].Id+'">' +
                                            '<img class="sensornotpinimg" alt="pin icon" src="http://loradatagroep9.blob.core.windows.net/proximusimages/pin-black-icon.svg" />' +
                                            '</td>' +
                                            '</tr>');
                            }
                        }
                    }

                    //sort sensors with click on group
                    function groupSort(arr) {

                        var sensorVar = [];
                        for(var i=0;i<arr.length;i++)
                        {

                            if (!pinnedSensors.length == 0) {
                                for (var j = 0; j < pinnedSensors.length; j++) {
                                    if (arr[i].Id == pinnedSensors[j].Id) {
                                        $(".sensorlist")
                                            .append('<tr class="sensorrows" id="sensor' +
                                                pinnedSensors[j].Id +
                                                '">' +
                                                '<td class="idsensordiv">' +
                                                pinnedSensors[j].MACAddress +
                                                '</td>' +
                                                '<td class="namesensordiv">' +
                                                pinnedSensors[j].Name +
                                                '</td>' +
                                                '<td class="namesensordiv">' +
                                                pinnedSensors[j].Containers.length +
                                                '</td>' +
                                                '<td class="sensorlocationdiv">' +
                                                pinnedSensors[j].Location +
                                                '</td>' +
                                                '<td class="sensorpinimgtd"  id="' +
                                                pinnedSensors[j].Id +
                                                '">' +
                                                '<img class="sensorpinimg" alt="pin icon" src="http://loradatagroep9.blob.core.windows.net/proximusimages/pin-black-icon.svg" />' +
                                                '</td>' +
                                                '</tr>');
                                        sensorVar.push(arr[i].Id);
                                    }}
                                        for (var l = 0; l< allSensors.length; l++) {
                                            if (arr[i].Id == allSensors[l].Id) {
                                                if(!isInArray(arr[i].Id, sensorVar)){
                                                    sensorVar.push(arr[i].Id);
                                                    $(".sensorlist")
                                                        .append('<tr class="sensorrows" id="sensor' +
                                                            allSensors[l].Id +
                                                            '">' +
                                                            '<td class="idsensordiv">' +
                                                            allSensors[l].MACAddress +
                                                            '</td>' +
                                                            '<td class="namesensordiv">' +
                                                            allSensors[l].Name +
                                                            '</td>' +
                                                            '<td class="namesensordiv">' +
                                                            allSensors[l].Containers.length +
                                                            '</td>' +
                                                            '<td class="sensorlocationdiv">' +
                                                            allSensors[l].Location +
                                                            '</td>' +
                                                            '<td class="sensorpinimgtd"  id="' +
                                                            allSensors[l].Id +
                                                            '">' +
                                                            '<img class="sensornotpinimg" alt="pin icon" src="http://loradatagroep9.blob.core.windows.net/proximusimages/pin-black-icon.svg" />' +
                                                            '</td>' +
                                                            '</tr>');
                                                } else {
                                                    sensorVar.push(arr[i].Id);
                                                }


                                    }
                                }

                            } else {
                                for (var l = 0; l< allSensors.length; l++) {
                                    if (arr[i].Id == allSensors[l].Id) {
                                        $(".sensorlist")
                                          .append('<tr class="sensorrows" id="sensor' +
                                              allSensors[l].Id +
                                              '">' +
                                              '<td class="idsensordiv">' +
                                              allSensors[l].MACAddress +
                                              '</td>' +
                                              '<td class="namesensordiv">' +
                                             allSensors[l].Name +
                                              '</td>' +
                                              '<td class="namesensordiv">' +
                                              allSensors[l].Containers.length +
                                              '</td>' +
                                              '<td class="sensorlocationdiv">' +
                                              allSensors[l].Location +
                                              '</td>' +
                                              '<td class="sensorpinimgtd"  id="' +
                                              allSensors[l].Id +
                                              '">' +
                                              '<img class="sensornotpinimg" alt="pin icon" src="http://loradatagroep9.blob.core.windows.net/proximusimages/pin-black-icon.svg" />' +
                                              '</td>' +
                                              '</tr>');
                                    }
                                }

                            }
                        }
                    }

                    //check if value is part of the array
                    function isInArray(value, array) {
                        return array.indexOf(value) > -1;
                    }


                    //search for sensors with searchbar
                    $('.searchdiv').on('click','.inputimg',function() {
                                var searchkeyword = $('.searchbardiv').val();
                                $.ajax({
                                    url: webApiBaseUrl + "Get/GetSensorsOnQuery?query=" + searchkeyword,
                                    method: "GET",
                                    contentType: "application/json"
                                }).done(function(json) {
                                    if (json != null) {
                                        var data = JSON.parse(json);
                                        $('.sensorrows').remove();
                                        groupSort(data);

                                    }

                                })
                    .fail(function(json) { console.log('sensor failed'); });
                            });

                    //search for sensors with dropdownlist
                    $('.dropdownsort').change( function() {
                        
                        ($('.sensordetails').remove());
                            var searchkeyword = $('.dropdownsort :selected').val();
                                $.ajax({
                                    url: webApiBaseUrl + "Get/GetSensorsOnQuery?query=" + searchkeyword,
                                    method: "GET",
                                    contentType: "application/json"
                                }).done(function(json) {
                                    if (json != null) {
                                        var data = JSON.parse(json);
                                        $('.sensorrows').remove();
                                        groupSort(data);

                                    }

                                })
                    .fail(function(json) { console.log('sensor failed'); });
                            });

                    //prevent default action for a form
                    $('.searchsensorform').submit(function(e) {
                            e.preventDefault();
                    });

                    //getcurrent containervalue
                    function getRecentData(containerId, recentDataLoaded) {
                        $.ajax({
                            url: webApiBaseUrl + "/get/getmostrecentvalue?containerid=" + containerId,
                            method: "GET",
                            async:false
                        }).done(function(json) {
                            if (json != null) {
                                var data = JSON.parse(json);

                                //Get the value
                                var value;
                                if (data.CurrentValue.HexValue) value = data.CurrentValue.HexValue;
                                else value = data.CurrentValue.Value;

                                containercurvalue= Math.round(data.CurrentValue.Value);
                                //Get the date
                                var date = new Date(data.CurrentValue.Timestamp);

                                if ($.isFunction(recentDataLoaded)) {
                                    recentDataLoaded(value, date);
                                }
                            }
                        }).fail(function() {
                            if ($.isFunction(MyThings.logToUser)) {
                                MyThings.logToUser("Item " + containerId + " could not be loaded.");
                            }
                        });
                    }

                    //check if there is a viewbag with content
                    function sensorStartupSort(){
                    if (groupviewbag != "" && sensorviewbag!="") {
                        var sensorIds = [];
                         ($('.sensorrows').remove());
                            ($('.sensordetails').remove());
                           for (var j = 0; j < groups.length; j++) {
                               if (groups[j].Id == groupviewbag) {
                                    var sensorGroups = groups[j].Sensors;
                                    for (var l = 0; l < sensorGroups.length; l++) {
                                        sensorIds.push(sensorGroups[l]);

                                    }
                                }
                            }
                            groupSort(sensorIds);
                        showsensorDetail(sensorviewbag);
                
                    }else if (groupviewbag != "") {
                        var sensorIds = [];
                        ($('.sensorrows').remove());
                        ($('.sensordetails').remove());
                        for (var j = 0; j < groups.length; j++) {
                            if (groups[j].Id == groupviewbag) {
                                var sensorGroups = groups[j].Sensors;
                                for (var l = 0; l < sensorGroups.length; l++) {
                                    sensorIds.push(sensorGroups[l]);

                                }
                            }
                        }
                        groupSort(sensorIds);
                    }
                    else if (sensorviewbag != "") {

                        sensorlistCreate();
                        for (var i = 0; i < allSensors.length; i++) {
                            if (sensorviewbag == allSensors[i].Id) {
                                var sensorcontainer = allSensors[i].Containers;
                                var sensorviewbagid = "#sensor" + sensorviewbag;
                                if (!$('.sensordetails').length) {
                                    $('<div class="sensordetails">' +
                                            '<h2>Extra details' +
                                            '</h2>' +
                                            '<div class="sensordetailcompany">Company: ' +
                                            allSensors[i].Company +
                                            '</div>' +
                                            '<div class="sensordetaillocation">Location: ' +
                                            allSensors[i].Location +
                                            '</div>' +
                                            '<div class="sensordetaillocation">BasestationLat: ' +
                                            allSensors[i].Lat +
                                            '</div>' +
                                            '<div class="sensordetaillocation">BasestationLng: ' +
                                            allSensors[i].Lng +
                                            '</div>' +
                                            '<div class="sensordetailcreation">CreationDate: ' +
                                            allSensors[i].CreationDate +
                                            '</div>' +
                                            '<div class="sensordetailsensorentries">Sensorentries: ' +
                                            allSensors[i].SensorEntries +
                                            '</div>' +
                                            '</div>')
                                        .insertAfter(sensorviewbagid);
                                    for (var j = 0; j < sensorcontainer.length; j++) {
                                        $('<div class="sensordetailcontainers">' +
                                                '<h2 class="sensordetailcontainer">Container: ' +
                                                sensorcontainer[j].ContainerType.Name +
                                                '</h2>' +
                                                '<div class="containertype">Containertype: ' +
                                                sensorcontainer[j].ContainerType.Name +
                                                '</div><div class="creationtime">Creationtime: ' +
                                                sensorcontainer[j].CreationTime +
                                                '</div><div class="lasttime">LastUpdatedTime: ' +
                                                sensorcontainer[j].LastUpdatedTime +
                                                '</div>' +
                                                '</div>')
                                            .insertAfter($('.sensordetails'));
                                    }
                                } else {
                                    ($('.sensordetails').remove());
                                    ($('.sensordetailcontainers').remove());
                                }

                            }
                        }
                    } else if (queryviewbag != "") {
                        $.ajax({
                            url: webApiBaseUrl + "Get/GetSensorsOnQuery?query=" + queryviewbag,
                    method: "GET",
                    contentType: "application/json"
                }).done(function(json) {
                    if (json != null) {
                        var data = JSON.parse(json);
                        $('.sensorrows').remove();
                        groupSort(data);

                    }

                }).fail(function(json) {
                            console.log('sensor failed');

                        });
                    } else {
                        sensorlistCreate();
                    }
                    }

                    grouplistCreate();
                    searchauto();
                    fillSortingbox();
                    sensorStartupSort();
                })
        </script>
    }
